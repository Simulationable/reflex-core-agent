@page
@model ReflexCoreAgent.Pages.Agents.IndexModel
@{
    ViewData["Title"] = "Agent Management";
}

<!-- Modal ลบ Agent -->
<div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white rounded-lg shadow-lg p-6 w-full max-w-md">
        <h2 class="text-lg font-semibold text-gray-800 mb-4">ยืนยันการลบ Agent</h2>
        <p class="text-sm text-gray-600 mb-4">คุณแน่ใจหรือไม่ว่าต้องการลบ Agent นี้? การดำเนินการนี้ไม่สามารถย้อนกลับได้</p>
        <div class="flex justify-end space-x-2">
            <button onclick="closeDeleteModal()" class="px-4 py-2 text-gray-700 hover:text-black">ยกเลิก</button>
            <button id="confirmDeleteBtn" class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700">ลบ</button>
        </div>
    </div>
</div>

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center mt-6 mb-4">
        <div>
            <h1 class="text-3xl font-bold text-gray-900">🧠 รายการ Agent</h1>
            <p class="text-gray-500 text-sm mt-1">จัดการ Agent ทั้งหมดในระบบของคุณ</p>
        </div>
        <a href="/Agents/Create" class="inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md shadow hover:bg-blue-700 transition">
            ➕ เพิ่ม Agent
        </a>
    </div>

    <form method="get" class="flex flex-wrap items-center gap-3 mb-4">
        @Html.AntiForgeryToken()
        <input type="text" name="search" value="@Model.Search" placeholder="ค้นหา Agent..." class="border rounded px-3 py-1 w-64" />
        <select name="moderationFilter" class="border rounded px-3 py-1">
            <option value="">Moderation ทั้งหมด</option>
            <option value="true" selected="@((Model.ModerationFilter == true) ? "selected" : null)">เปิด</option>
            <option value="false" selected="@((Model.ModerationFilter == false) ? "selected" : null)">ปิด</option>
        </select>
        <select name="pageSize" class="border rounded px-3 py-1">
            @foreach (var size in new[] { 10, 25, 50, 100 })
            {
                <option value="@size" selected="@(Model.PageSize == size ? "selected" : null)">@size รายการ/หน้า</option>
            }
        </select>
        <button type="submit" class="bg-gray-800 text-white px-4 py-1 rounded">ค้นหา</button>
    </form>

    @if (Model.Result.Items.Any())
    {
        <div class="overflow-hidden border border-gray-200 rounded-lg shadow-sm">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50 text-xs font-semibold text-gray-700 uppercase tracking-wider">
                    <tr>
                        <th class="px-6 py-3 text-left">ชื่อ Agent</th>
                        <th class="px-6 py-3 text-left">จุดประสงค์</th>
                        <th class="px-6 py-3 text-left">Moderation</th>
                        <th class="px-6 py-3 text-left">ดำเนินการ</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-100 text-sm text-gray-700">
                    @foreach (var agent in Model.Result.Items)
                    {
                        <tr data-agent-id="@agent.Id">
                            <td class="px-6 py-4 font-medium text-gray-900">@agent.Name</td>
                            <td class="px-6 py-4">@agent.Purpose</td>
                            <td class="px-6 py-4">
                                <span class="inline-block px-2 py-1 rounded-full text-xs font-medium @(agent.EnableModeration ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                    @(agent.EnableModeration ? "เปิดใช้งาน" : "ปิดอยู่")
                                </span>
                            </td>
                            <td class="px-6 py-4 space-x-3">
                                <a href="/Agents/Edit/@agent.Id" class="text-blue-600 hover:underline">แก้ไข</a>
                                <!-- <button onclick="openDeleteModal('@agent.Id')" class="text-red-500 hover:underline">ลบ</button> -->
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="mt-4 flex justify-center space-x-1 text-sm">
            @for (int i = 1; i <= Model.Result.TotalPages; i++)
            {
                <a href="?search=@Model.Search&moderationFilter=@Model.ModerationFilter&pageSize=@Model.PageSize&page=@i"
                   class="px-3 py-1 rounded border @(i == Model.Result.Page ? "bg-blue-600 text-white" : "hover:bg-gray-100")">
                    @i
                </a>
            }
        </div>
    }
    else
    {
        <div class="mt-4 text-gray-500">
            ไม่พบ Agent ที่ตรงกับเงื่อนไข
        </div>
    }
</div>

@section Scripts {
    <script>
        let agentIdToDelete = null;

        function openDeleteModal(agentId) {
            agentIdToDelete = agentId;
            document.getElementById("deleteModal").classList.remove("hidden");
            document.getElementById("deleteModal").classList.add("flex");
        }

        function closeDeleteModal() {
            agentIdToDelete = null;
            document.getElementById("deleteModal").classList.add("hidden");
            document.getElementById("deleteModal").classList.remove("flex");
        }

        document.getElementById("confirmDeleteBtn").addEventListener("click", function () {
            if (!agentIdToDelete) return;

            fetch(`?handler=DeleteAgent&id=${agentIdToDelete}`, {
                method: "POST",
                headers: {
                    "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            }).then(response => {
                if (response.ok) {
                    document.querySelector(`tr[data-agent-id="${agentIdToDelete}"]`)?.remove();
                    closeDeleteModal();
                } else {
                    alert("ไม่สามารถลบ Agent ได้");
                    closeDeleteModal();
                }
            });
        });
    </script>
}

